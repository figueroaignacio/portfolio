// i18n
import { routing } from '@/i18n/routing';
import { hasLocale, Locale, NextIntlClientProvider } from 'next-intl';
import { setRequestLocale } from 'next-intl/server';

// Components
import { Hero } from '@/sections/hero';
import { ThemeProvider } from 'next-themes';

// Utils
import { geistSans } from '@/lib/fonts';
import type { Metadata } from 'next';
import { notFound } from 'next/navigation';

// Styles
import '../globals.css';

type LocaleLayoutProps = {
  children: React.ReactNode;
  params: Promise<{ locale: Locale }>;
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export const metadata: Metadata = {
  title: 'Ignacio Figueroa - Software Developer',
  description: 'Generated by create next app',
};

export default async function LocaleLayout({ children, params }: LocaleLayoutProps) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body className={`${geistSans.className} antialiased`}>
        <ThemeProvider attribute="class" defaultTheme="dark">
          <main className="container">
            <NextIntlClientProvider>
              <Hero />
              {children}
            </NextIntlClientProvider>
          </main>
        </ThemeProvider>
      </body>
    </html>
  );
}
